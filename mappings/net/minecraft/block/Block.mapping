CLASS ank net/minecraft/block/Block
	CLASS ank$a EnumOffsetType
		FIELD a NONE Lank$a;
		FIELD b XZ Lank$a;
		FIELD c XYZ Lank$a;
	FIELD A stateFactory Lavf;
	FIELD a AIR_ID Lmd;
	FIELD b creativeTab Lagf;
	FIELD c defaultState Lave;
	FIELD d translationKey Ljava/lang/String;
	FIELD h REGISTRY Lec;
	FIELD i BLOCKSTATE_ID_LIST Leh;
	FIELD j FULL_BLOCK_BOX Lbfm;
	FIELD k NULL_BOX Lbfm;
	FIELD l fullBounds Z
	FIELD m lightOpacityLevel I
	FIELD n allowsLightTransmission Z
	FIELD o lightEmissionLevel I
	FIELD p transparent Z
	FIELD q hardness F
	FIELD r explosionResistance F
	FIELD s miningStats Z
	FIELD t tickRandomly Z
	FIELD u hasBlockEntity Z
	FIELD v soundGroup Lasm;
	FIELD w particleGravityStrength F
	FIELD x material Lbbk;
	FIELD y mapColor Lbbl;
	FIELD z friction F
	METHOD <init> (Lbbk;Lbbl;)V
		ARG 0 material
		ARG 1 mapColor
	METHOD a getTranslationKey ()Ljava/lang/String;
	METHOD a setLightEmission (F)Lank;
	METHOD a deserializeState (I)Lave;
		ARG 0 meta
	METHOD a register (ILjava/lang/String;Lank;)V
	METHOD a getDropAmount (ILjava/util/Random;)I
	METHOD a register (ILmd;Lank;)V
	METHOD a setCreativeTab (Lagf;)Lank;
		ARG 0 creativeTab
	METHOD a getBlockFromItem (Lahd;)Lank;
	METHOD a addStacksForDisplay (Lahd;Lagf;Lem;)V
	METHOD a addInformation (Lahf;Lacu;Ljava/util/List;Z)V
	METHOD a shouldDropItemsOnExplosion (Lald;)Z
		ARG 0 explosion
	METHOD a afterBreak (Lali;Lacu;Ldx;Lave;Latu;Lahf;)V
	METHOD a canPlaceAt (Lali;Ldx;)Z
	METHOD a dropStack (Lali;Ldx;Lahf;)V
	METHOD a onDestroyedByExplosion (Lali;Ldx;Lald;)V
	METHOD a getPickStack (Lali;Ldx;Lave;)Lahf;
	METHOD a dropItems (Lali;Ldx;Lave;FI)V
	METHOD a activate (Lali;Ldx;Lave;Lacu;Lsw;Lee;FFF)Z
	METHOD a onPlaced (Lali;Ldx;Lave;Luk;Lahf;)V
	METHOD a getStateForPlacement (Lali;Ldx;Lee;FFFILuk;)Lave;
	METHOD a onLandedUpon (Lali;Ldx;Lub;F)V
	METHOD a isAir (Lalm;Ldx;)Z
	METHOD a getRawIdFromBlock (Lank;)I
	METHOD a areEqual (Lank;Lank;)Z
		ARG 0 first
		ARG 1 second
	METHOD a setSoundGroup (Lasm;)Lank;
	METHOD a getRenderType (Lave;)Larx;
	METHOD a calcBlockBreakingDelta (Lave;Lacu;Lali;Ldx;)F
	METHOD a getHardness (Lave;Lali;Ldx;)F
	METHOD a onBlockAction (Lave;Lali;Ldx;II)Z
	METHOD a update (Lave;Lali;Ldx;Lank;Ldx;)V
	METHOD a addBoundingBoxes (Lave;Lali;Ldx;Lbfm;Ljava/util/List;Lub;Z)V
	METHOD a rayTrace (Lave;Lali;Ldx;Lbfp;Lbfp;)Lbfn;
	METHOD a randomDisplayTick (Lave;Lali;Ldx;Ljava/util/Random;)V
	METHOD a getCollisionBox (Lave;Lalm;Ldx;)Lbfm;
	METHOD a shouldRenderSide (Lave;Lalm;Ldx;Lee;)Z
	METHOD a applyMirror (Lave;Laqm;)Lave;
		ARG 0 state
		ARG 1 mirror
	METHOD a applyRotation (Lave;Lasa;)Lave;
		ARG 0 state
		ARG 1 rotation
	METHOD a getDropItem (Lave;Ljava/util/Random;I)Lahd;
	METHOD a allowsSpawning (Lave;Lub;)Z
	METHOD a addCollisionBox (Ldx;Lbfm;Ljava/util/List;Lbfm;)V
	METHOD a rayTrace (Ldx;Lbfp;Lbfp;Lbfm;)Lbfn;
	METHOD a getDropAmount (Ljava/util/Random;)I
	METHOD a getExplosionResistance (Lub;)F
	METHOD a setTickRandomly (Z)Lank;
	METHOD b createStateFactory ()Lavf;
	METHOD b setExplosionResistance (F)Lank;
	METHOD b getBlockByRawId (I)Lank;
	METHOD b dropExperience (Lali;Ldx;I)V
	METHOD b dropItems (Lali;Ldx;Lave;I)V
	METHOD b randomTick (Lali;Ldx;Lave;Ljava/util/Random;)V
	METHOD b isEqual (Lank;)Z
		ARG 0 other
	METHOD b isFullBoundsCubeForCulling (Lave;)Z
	METHOD b getBoundingBoxClient (Lave;Lali;Ldx;)Lbfm;
	METHOD b getBoundingBox (Lave;Lalm;Ldx;)Lbfm;
	METHOD b getWeakRedstonePower (Lave;Lalm;Ldx;Lee;)I
	METHOD b getByBlockById (Ljava/lang/String;)Lank;
	METHOD c getTranslatedName ()Ljava/lang/String;
	METHOD c setHardness (F)Lank;
	METHOD c getStateByRawId (I)Lave;
	METHOD c getComparatorOutput (Lave;Lali;Ldx;)I
	METHOD c getRenderingState (Lave;Lalm;Ldx;)Lave;
	METHOD c getStrongRedstonePower (Lave;Lalm;Ldx;Lee;)I
	METHOD c setTranslationKey (Ljava/lang/String;)Lank;
	METHOD d setLightOpacityLevel (I)Lank;
	METHOD d getDropItemDamage (Lave;)I
	METHOD d getBlockBrightness (Lave;Lalm;Ldx;)I
	METHOD e serializeState (Lave;)I
	METHOD e getOffsetPos (Lave;Lalm;Ldx;)Lbfp;
	METHOD f getRenderLayer ()Lala;
	METHOD f getAmbientOcclusionLightLevel (Lave;)F
	METHOD g emitsRedstonePower (Lave;)Z
	METHOD h getPistonBehavior (Lave;)Lbbn;
	METHOD j setUnbreakable ()Lank;
	METHOD j getRawIdFromBlockState (Lave;)I
	METHOD k shouldTickRandomly ()Z
	METHOD k hasSolidTopSurface (Lave;)Z
	METHOD l hasBlockEntity ()Z
	METHOD l isFullBoundsCube (Lave;)Z
	METHOD m getLightOpacityLevel (Lave;)I
		ARG 0 state
	METHOD n shouldDropSilkTouch ()Z
	METHOD n allowsLightTransmission (Lave;)Z
		ARG 0 state
	METHOD o hasMiningStats ()Z
	METHOD o getLightEmissionLevel (Lave;)I
		ARG 0 state
	METHOD p disableMiningStats ()Lank;
	METHOD p isTransparent (Lave;)Z
		ARG 0 state
	METHOD q getCreativeTab ()Lagf;
	METHOD q getMaterial (Lave;)Lbbk;
		ARG 0 state
	METHOD r getMapColor (Lave;)Lbbl;
	METHOD s getStateFactory ()Lavf;
	METHOD s isFullBoundsCubeForRendering (Lave;)Z
	METHOD t getDefaultState ()Lave;
	METHOD t isSimpleFullBlock (Lave;)Z
	METHOD u getOffsetType ()Lank$a;
	METHOD v getSoundGroup ()Lasm;
	METHOD v hasBlockEntityBreakingRender (Lave;)Z
	METHOD w registerDefaults ()V
	METHOD w getStackFromState (Lave;)Lahf;
	METHOD x hasComparatorOutput (Lave;)Z
	METHOD y setDefaultState (Lave;)V
